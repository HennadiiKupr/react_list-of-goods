{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","start","setState","reverse","alphabet","ALPABET","length","LENGTH","reset","this","goods","visibleGoods","sort","g1","g2","localeCompare","getReorderedGoods","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,yEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,MAAQ,kBAAM,EAAKC,SAAS,CAAEL,WAAW,KAP3C,EASEM,QAAU,kBAAM,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtCE,YAAaF,EAAME,gBAVvB,EAaEM,SAAW,kBAAM,EAAKF,SAAS,CAAEH,SAAUN,EAASY,WAbtD,EAeEC,OAAS,kBAAM,EAAKJ,SAAS,CAAEH,SAAUN,EAASc,UAfpD,EAiBEC,MAAQ,kBAAM,EAAKN,SAAS,CAC1BJ,YAAY,EACZC,SAAUN,EAASO,QAnBvB,4CAsBE,WACE,MAAiCS,KAAKb,MAA9BG,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZY,EA5DV,SACEA,EACAX,EACAD,GAGA,IAAMa,EAAY,YAAOD,GAgBzB,OAdIX,IAAaN,EAASO,OACpBD,IAAaN,EAASY,SACxBM,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAIxBf,IAAaN,EAASc,QACxBI,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGP,OAASQ,EAAGR,WAKxBR,EACKa,EAAaR,UAGfQ,EAkCSK,CAAkBtB,EAAiBK,EAAUD,GAE3D,OACE,qBAAKmB,UAAU,MAAf,SACIR,KAAKb,MAAMC,UAWT,qCACE,wBAAQqB,KAAK,SAASC,QAASV,KAAKL,SAApC,iCAIA,wBAAQc,KAAK,SAASC,QAASV,KAAKH,OAApC,4BAIA,wBAAQY,KAAK,SAASC,QAASV,KAAKN,QAApC,qBAIA,wBAAQe,KAAK,SAASC,QAASV,KAAKD,MAApC,mBAIA,oBAAIS,UAAU,QAAd,SACGP,EAAMU,KAAI,SAAAC,GACT,OACE,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,WA/Bf,wBACEH,KAAK,SACLC,QAASV,KAAKR,MAFhB,yBA9BZ,GAAyBqB,aCxDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f40a3895.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Component } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    if (sortType === SortType.ALPABET) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.localeCompare(g2);\n      });\n    }\n\n    if (sortType === SortType.LENGTH) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n    }\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  start = () => this.setState({ isStarted: true });\n\n  reverse = () => this.setState(state => ({\n    isReversed: !state.isReversed,\n  }));\n\n  alphabet = () => this.setState({ sortType: SortType.ALPABET });\n\n  length = () => this.setState({ sortType: SortType.LENGTH });\n\n  reset = () => this.setState({\n    isReversed: false,\n    sortType: SortType.NONE,\n  });\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App\">\n        {!this.state.isStarted\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.start}\n            >\n              Start\n            </button>\n          )\n\n          : (\n            <>\n              <button type=\"button\" onClick={this.alphabet}>\n                Sort alphabetically\n              </button>\n\n              <button type=\"button\" onClick={this.length}>\n                Sort by length\n              </button>\n\n              <button type=\"button\" onClick={this.reverse}>\n                Reverse\n              </button>\n\n              <button type=\"button\" onClick={this.reset}>\n                Reset\n              </button>\n\n              <ul className=\"Goods\">\n                {goods.map(good => {\n                  return (\n                    <li\n                      className=\"Goods__item\"\n                      key={good}\n                    >\n                      {good}\n                    </li>\n                  );\n                })}\n              </ul>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}